# Routes

# Home page (redirect to last conference)
GET           /                                               @controllers.Application.index
GET           /contact                                        @controllers.Application.contact
GET           /impressum                                      @controllers.Application.impressum
GET           /about                                          @controllers.Application.about

GET           /dashboard/conference                           @controllers.Application.createConference()
GET           /dashboard/conference/:id                       @controllers.Application.adminConference(id: String)
GET           /dashboard/conference/:id/abstracts             @controllers.Application.adminAbstracts(id: String)
GET           /dashboard/accounts                             @controllers.Application.adminAccounts()

GET           /conferences                                    @controllers.Application.conferences
GET           /conference/:id                                 @controllers.Application.conference(id: String)
GET           /conference/:id/submission                      @controllers.Application.submission(id: String)
GET           /conference/:id/locations                       @controllers.Application.locations(id: String)
GET           /conference/:id/floorplans                      @controllers.Application.floorplans(id: String)
GET           /conference/:id/abstracts                       @controllers.Application.abstractsPublic(id: String)
GET           /conference/:id/schedule                        @controllers.Application.schedule(id: String)
GET           /myabstracts                                    @controllers.Application.abstractsPrivate
GET           /myabstracts/:id/edit                           @controllers.Application.edit(id: String)
GET           /submitted                                      @controllers.Application.abstractsPending

GET           /abstracts/:id                                  @controllers.Application.viewAbstract(id: String)


# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                   controllers.Assets.at(path="/public", file)
GET           /manifest.json                                  controllers.Assets.at(path="/public", file="manifest.json")
GET           /manifest/*file                                 controllers.Assets.at(path="/public", file)
GET           /service-worker.js                              controllers.Assets.at(path="/public", file="service-worker.js")
GET           /cache/mobcache.appcache                        @controllers.Application.createAppCacheManifest

# API ------------------------------------------------------------------------------------------------------------------
# Conference interface
POST          /api/conferences                                @controllers.api.Conferences.create
GET           /api/conferences                                @controllers.api.Conferences.list(group: String ?= null)
GET           /api/conferences/:id                            @controllers.api.Conferences.get(id: String)
PUT           /api/conferences/:id                            @controllers.api.Conferences.update(id: String)
DELETE        /api/conferences/:id                            @controllers.api.Conferences.delete(id: String)
POST          /api/conferences/:id/abstracts                  @controllers.api.Abstracts.create(id: String)
GET           /api/conferences/:id/abstracts                  @controllers.api.Abstracts.listByConference(id: String)
GET           /api/conferences/:id/allAbstracts               @controllers.api.Abstracts.listAllByConference(id: String)
PUT           /api/conferences/:id/owners                     @controllers.api.Conferences.setPermissions(id: String)
GET           /api/conferences/:id/owners                     @controllers.api.Conferences.getPermissions(id: String)
PUT           /api/conferences/:id/geo                        @controllers.api.Conferences.setGeo(id: String)
GET           /api/conferences/:id/geo                        @controllers.api.Conferences.getGeo(id: String)
PUT           /api/conferences/:id/schedule                   @controllers.api.Conferences.setSchedule(id: String)
GET           /api/conferences/:id/schedule                   @controllers.api.Conferences.getSchedule(id: String)
PUT           /api/conferences/:id/info                       @controllers.api.Conferences.setInfo(id: String)
GET           /api/conferences/:id/info                       @controllers.api.Conferences.getInfo(id: String)

# Abstract interface
GET           /api/abstracts/:id                              @controllers.api.Abstracts.get(id: String)
PUT           /api/abstracts/:id                              @controllers.api.Abstracts.update(id: String)
DELETE        /api/abstracts/:id                              @controllers.api.Abstracts.delete(id: String)
PATCH         /api/abstracts/:id                              @controllers.api.Abstracts.patch(id: String)
POST          /api/abstracts/:id/figures                      @controllers.api.Figures.upload(id: String)
GET           /api/abstracts/:id/figures                      @controllers.api.Figures.list(id: String)
PUT           /api/abstracts/:id/owners                       @controllers.api.Abstracts.setPermissions(id: String)
GET           /api/abstracts/:id/owners                       @controllers.api.Abstracts.getPermissions(id: String)
GET           /api/abstracts/:id/stateLog                     @controllers.api.Abstracts.listState(id: String)
PUT           /api/abstracts/:id/state                        @controllers.api.Abstracts.setState(id: String)

# Figure interface
GET           /api/figures/:id/image                          @controllers.api.Figures.download(id: String)
PUT           /api/figures/:id                                @controllers.api.Figures.updateFigure(id: String)
DELETE        /api/figures/:id                                @controllers.api.Figures.delete(id: String)

# [...] maybe add more figure functions

# Account interface

GET           /api/users                                      @controllers.api.Accounts.accountsByEmail(email: String)
GET           /api/user/list                                  @controllers.api.Accounts.listAccounts()
GET           /api/user/:id/abstracts                         @controllers.api.Abstracts.listByAccount(id: String)
GET           /api/user/self/conferences/:id/abstracts        @controllers.api.Abstracts.listOwn(id: String)
GET           /api/user/self/conferences                      @controllers.api.Conferences.listWithOwnAbstracts


# Auth -----------------------------------------------------------------------------------------------------------------

GET           /authenticate/:provider                         @controllers.Authentication.authenticate(provider: String)
POST          /authenticate/:provider                         @controllers.Authentication.authenticate(provider: String)

GET           /login                                          @controllers.Accounts.logIn
GET           /signup                                         @controllers.Accounts.signUp
POST          /signup                                         @controllers.Accounts.create
GET           /activate/:token                                @controllers.Accounts.activate(token: String)
GET           /logout                                         @controllers.Accounts.logOut
GET           /notauthenticated                               @controllers.Accounts.notAuthenticated
GET           /password                                       @controllers.Accounts.passwordResetPage
POST          /password                                       @controllers.Accounts.passwordResetCommit
GET           /forgotpassword                                 @controllers.Accounts.forgotPasswordPage
POST          /forgotpassword                                 @controllers.Accounts.forgotPasswordCommit
GET           /mail                                           @controllers.Accounts.emailchange
POST          /mail                                           @controllers.Accounts.emailchangeCommit

# Mobile ---------------------------------------------------------------------------------------------------------------

GET            /mob/conferences                               @controllers.Mobile.Conferences
GET            /mob/conference/:id                            @controllers.Mobile.Conference(id: String)
